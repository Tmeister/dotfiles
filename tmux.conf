color_red="#f38ba8"
color_orange="#fab387"
color_yellow="#f9e2af"
color_green="#a6e3a1"
color_magenta="#cba6f7"
color_blue="#89b4fa"
color_cyan="#89dceb"
color_fg="#cdd6f4"
color_bg="#1e1e2e"
color_grey1="#bac2de"
color_grey2="#a6adc8" 
color_grey3="#9399b2"
color_grey4="#7f849c"
color_grey5="#6c7086"
color_grey6="#585b70"
color_grey7="#45475a"
color_grey8="#313244"
color_grey9="#1e1e2e"
color_grey10="#181825"
color_grey11="#11111b"
color_grey12="#1e2030"
color_grey13="#303446"
color_grey14="#242932"
color_grey15="#1e222a"
color_grey16="#1c1f26"
color_grey17="#0f1115"
color_grey18="#0d0e11"
color_grey19="#020203" 

set -g status on
set -g status-style fg=$color_grey9,bg=$color_grey13
# set -g destroy-unattached on
set -g default-terminal "tmux-256color"
set -ga terminal-overrides ",xterm-256color:Tc"
set -g pane-border-style bg=$color_bg,fg=$color_grey14
set -g pane-active-border-style bg=$color_bg,fg=$color_grey14
set -g mode-keys vi
set -g status-keys vi
set -g mouse on
set -g escape-time 0
set -g focus-events on
set -g history-limit 3000
set -g history-file ~/.tmux_history
set -g monitor-activity off
set -g visual-activity off
set -g base-index 1
set -g pane-base-index 1
set -g -w automatic-rename on
set -g renumber-windows on
set -g bell-action none
set -g status-position bottom
set -g status-interval 5

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'christoomey/vim-tmux-navigator'
set -g @plugin 'MunifTanjim/tmux-mode-indicator'
set -g @plugin 'tmux-plugins/tmux-cpu'

################################################################################
# Key Binding
################################################################################

# -r means that the bind can repeat without entering prefix again
# -n means that the bind doesn't use the prefix

# Ensure prefix is Ctrl+B
set -g prefix C-Space

# Send prefix to a nested tmux session by doubling the prefix
bind C-Space send-prefix

# 'PREFIX r' to reload of the config file
unbind r
bind r source-file ~/.tmux.conf\; display-message '~/.tmux.conf reloaded'

# Allow holding Ctrl when using using prefix+p/n for switching windows
bind C-p previous-window
bind C-n next-window

# Move around panes like in vim
bind -r h select-pane -L
bind -r j select-pane -D
bind -r k select-pane -U
bind -r l select-pane -R
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

# Smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"

# Switch between previous and next windows with repeatable
bind -r n next-window
bind -r p previous-window

# Move the current window to the next window or previous window position
bind -r N run-shell "tmux swap-window -t $(expr $(tmux list-windows | grep \"(active)\" | cut -d \":\" -f 1) + 1)"
bind -r P run-shell "tmux swap-window -t $(expr $(tmux list-windows | grep \"(active)\" | cut -d \":\" -f 1) - 1)"

# Switch between two most recently used windows
bind Space last-window

# use PREFIX+| (or PREFIX+\) to split window horizontally and PREFIX+- or
# (PREFIX+_) to split vertically also use the current pane path to define the
# new pane path
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# Change the path for newly created windows
bind c new-window -c "#{pane_current_path}"

# Setup 'v' to begin selection as in Vim
if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.4" | bc)" = 1 ]' \
    'bind-key -T copy-mode-vi v send-keys -X begin-selection;'

bind y run -b "tmux show-buffer | xclip -selection clipboard"\; display-message "Copied tmux buffer to system clipboard"

bind-key -r F new-window t

# Kill current session
bind X confirm-before "kill-session -t ''"


set -g @emulate-scroll-for-no-mouse-alternate-buffer "on"

mode_separator=""
set -g @mode_indicator_prefix_prompt "  #[default]#[fg=$color_yellow]$mode_separator"
set -g @mode_indicator_prefix_mode_style bg=$color_yellow,fg=$color_bg,bold
set -g @mode_indicator_copy_prompt "  #[default]#[fg=$color_orange]$mode_separator"
set -g @mode_indicator_copy_mode_style bg=$color_orange,fg=$color_bg,bold
set -g @mode_indicator_sync_prompt "  #[default]#[fg=$color_red]$mode_separator"
set -g @mode_indicator_sync_mode_style bg=$color_red,fg=$color_bg,bold
set -g @mode_indicator_empty_prompt "  #[default]#[fg=$color_cyan]$mode_separator"
set -g @mode_indicator_empty_mode_style bg=$color_cyan,fg=$color_bg,bold

set -g @online_icon "  "
set -g @offline_icon ""

set -g status-right-length 100
set -g status-left '#{tmux_mode_indicator}'
set -g status-right "#[bg=$color_grey13,fg=$color_grey4]  #{cpu_percentage}   #{ram_percentage}  #[fg=$color_grey12]#[bg=$color_grey13,fg=$color_grey13]#[bg=$color_grey13,fg=$color_grey4,bold] %d %b %Y %I:%M %p "
set -g status-justify left

set -g window-status-current-format " #[fg=$color_grey4,bold]卑 #I:#W"
set -g window-status-format " #[fg=$color_grey4]喝 #I:#W"

run '~/.tmux/plugins/tpm/tpm'